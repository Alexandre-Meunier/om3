// Package daemonapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package daemonapi

import (
	"time"
)

// Error defines model for Error.
type Error struct {
	// Error code
	Code int32 `json:"code"`

	// Error message
	Message string `json:"message"`
}

// PostObjectMonitor defines model for PostObjectMonitor.
type PostObjectMonitor struct {
	GlobalExpect *string `json:"global_expect,omitempty"`
	Path         string  `json:"path"`
}

// PostObjectStatus defines model for PostObjectStatus.
type PostObjectStatus struct {
	Path   string         `json:"path"`
	Status InstanceStatus `json:"status"`
}

// InstanceStatus defines model for instanceStatus.
type InstanceStatus struct {
	Avail       Status    `json:"avail"`
	Frozen      time.Time `json:"frozen"`
	Kind        *string   `json:"kind,omitempty"`
	Optional    *Status   `json:"optional,omitempty"`
	Overall     Status    `json:"overall"`
	Provisioned bool      `json:"provisioned"`
	Updated     time.Time `json:"updated"`
}

// ObjectConfig defines model for objectConfig.
type ObjectConfig struct {
	Data  *map[string]interface{} `json:"data,omitempty"`
	Mtime *time.Time              `json:"mtime,omitempty"`
}

// ObjectFile defines model for objectFile.
type ObjectFile struct {
	Data  []byte    `json:"data"`
	Mtime time.Time `json:"mtime"`
}

// ObjectPath defines model for objectPath.
type ObjectPath = string

// ObjectSelector defines model for objectSelector.
type ObjectSelector = []ObjectPath

// Status defines model for status.
type Status = string

// QueryObjectPath defines model for queryObjectPath.
type QueryObjectPath = string

// QueryObjectSelector defines model for queryObjectSelector.
type QueryObjectSelector = string

// GetObjectConfigParams defines parameters for GetObjectConfig.
type GetObjectConfigParams struct {
	// object path
	Path QueryObjectPath `form:"path" json:"path"`

	// evaluate
	Evaluate *bool `form:"evaluate,omitempty" json:"evaluate,omitempty"`

	// impersonate the evaluation as node
	Impersonate *string `form:"impersonate,omitempty" json:"impersonate,omitempty"`
}

// GetObjectFileParams defines parameters for GetObjectFile.
type GetObjectFileParams struct {
	// object path
	Path QueryObjectPath `form:"path" json:"path"`
}

// PostObjectMonitorJSONBody defines parameters for PostObjectMonitor.
type PostObjectMonitorJSONBody = PostObjectMonitor

// GetObjectSelectorParams defines parameters for GetObjectSelector.
type GetObjectSelectorParams struct {
	// object selector
	Selector QueryObjectSelector `form:"selector" json:"selector"`
}

// PostObjectStatusJSONBody defines parameters for PostObjectStatus.
type PostObjectStatusJSONBody = PostObjectStatus

// PostObjectMonitorJSONRequestBody defines body for PostObjectMonitor for application/json ContentType.
type PostObjectMonitorJSONRequestBody = PostObjectMonitorJSONBody

// PostObjectStatusJSONRequestBody defines body for PostObjectStatus for application/json ContentType.
type PostObjectStatusJSONRequestBody = PostObjectStatusJSONBody
