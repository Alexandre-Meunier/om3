// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock_monitor is a generated GoMock package.
package mock_monitor

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGetter is a mock of Getter interface.
type MockGetter struct {
	ctrl     *gomock.Controller
	recorder *MockGetterMockRecorder
}

// MockGetterMockRecorder is the mock recorder for MockGetter.
type MockGetterMockRecorder struct {
	mock *MockGetter
}

// NewMockGetter creates a new mock instance.
func NewMockGetter(ctrl *gomock.Controller) *MockGetter {
	mock := &MockGetter{ctrl: ctrl}
	mock.recorder = &MockGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetter) EXPECT() *MockGetterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockGetter) Get() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockGetterMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGetter)(nil).Get))
}

// MockEventGetter is a mock of EventGetter interface.
type MockEventGetter struct {
	ctrl     *gomock.Controller
	recorder *MockEventGetterMockRecorder
}

// MockEventGetterMockRecorder is the mock recorder for MockEventGetter.
type MockEventGetterMockRecorder struct {
	mock *MockEventGetter
}

// NewMockEventGetter creates a new mock instance.
func NewMockEventGetter(ctrl *gomock.Controller) *MockEventGetter {
	mock := &MockEventGetter{ctrl: ctrl}
	mock.recorder = &MockEventGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEventGetter) EXPECT() *MockEventGetterMockRecorder {
	return m.recorder
}

// GetRaw mocks base method.
func (m *MockEventGetter) GetRaw() (chan []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRaw")
	ret0, _ := ret[0].(chan []byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRaw indicates an expected call of GetRaw.
func (mr *MockEventGetterMockRecorder) GetRaw() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRaw", reflect.TypeOf((*MockEventGetter)(nil).GetRaw))
}
